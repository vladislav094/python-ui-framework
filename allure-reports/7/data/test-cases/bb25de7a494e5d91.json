{
  "uid" : "bb25de7a494e5d91",
  "name" : "test_authorization_with_invalid_credentials_negative",
  "fullName" : "tests.negative_tests.test_authorization_user_negative.TestAuthorizationRegistrationNegative#test_authorization_with_invalid_credentials_negative",
  "historyId" : "c1c8d9ab315ced79f61d6f2b0f6dbe24",
  "time" : {
    "start" : 1658675933502,
    "stop" : 1658675933502,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: The RUN_HEADLESS environment variable has not been set.",
  "statusTrace" : "@pytest.fixture\n    def _get_chrome_options() -> webdriver.ChromeOptions:\n    \n            \"\"\"\n            Creates a set of options for running the Chrome browser.\n            Runs Chrome in headless mode depending on the value of the RUN_HEADLESS environment variable.\n            :return: A set of options to run the Chrome browser with.\n            \"\"\"\n    \n            chrome_options = webdriver.ChromeOptions()\n>           run_headless = should_run_headless()\n\ntests/conftest.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nframework/common/env_vars.py:9: in should_run_headless\n    return bool(_get_env_var(\"RUN_HEADLESS\") == \"True\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'RUN_HEADLESS', default = ''\n\n    def _get_env_var(name: str, default: str = \"\"):\n        \"\"\"\n        Gets the value of an environment variable. If the environment variable does not exist, it throws a ValueError.\n        :param name: The name of the environment variable to fetch.\n        :param default: Option for setting a default value to return if the env variable is not found.\n        :return: The value of an environment variable.\n        \"\"\"\n        if name not in os.environ and not default:\n>           raise ValueError(f\"The {name} environment variable has not been set.\")\nE           ValueError: The RUN_HEADLESS environment variable has not been set.\n\nframework/common/env_vars.py:20: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Allure Epic"
  }, {
    "name" : "feature",
    "value" : "Demo Feature"
  }, {
    "name" : "story",
    "value" : "Passed Example"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('set_up_webdriver')"
  }, {
    "name" : "parentSuite",
    "value" : "tests.negative_tests"
  }, {
    "name" : "suite",
    "value" : "test_authorization_user_negative"
  }, {
    "name" : "subSuite",
    "value" : "TestAuthorizationRegistrationNegative"
  }, {
    "name" : "host",
    "value" : "vladislav-G3-3579"
  }, {
    "name" : "thread",
    "value" : "44170-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.negative_tests.test_authorization_user_negative"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "https://example.org/tms/2",
    "url" : "https://example.org/tms/2",
    "type" : "test_case"
  }, {
    "name" : "https://example.org/issue/1",
    "url" : "https://example.org/issue/1",
    "type" : "issue"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('set_up_webdriver')" ]
  },
  "source" : "bb25de7a494e5d91.json",
  "parameterValues" : [ ]
}